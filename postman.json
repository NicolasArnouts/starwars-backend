{
	"info": {
		"_postman_id": "41528efd-94e0-4653-acd8-cdfffca4af05",
		"name": "Starwars Backend",
		"description": "A collection for interacting with the Starwars API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32064722"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Get Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"console.log(jsonData)",
									"pm.collectionVariables.set(\"token\", jsonData.access);",
									"pm.collectionVariables.set(\"refresh_token\", jsonData.refresh);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{django_username}}\",\n    \"password\": \"{{django_password}}\"\n}"
						},
						"url": {
							"raw": "{{app_url}}/token/",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"token",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Refresh Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"token\", jsonData.access);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refresh\": \"{{refresh_token}}\"\n}"
						},
						"url": {
							"raw": "{{app_url}}/token/refresh/",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"token",
								"refresh",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Characters",
			"item": [
				{
					"name": "All Characters",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{app_url}}/characters/",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"characters",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "All Characters Filtered",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{app_url}}/characters/?name=Luke",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"characters",
								""
							],
							"query": [
								{
									"key": "name",
									"value": "Luke"
								},
								{
									"key": "height",
									"value": "172",
									"disabled": true
								},
								{
									"key": "mass",
									"value": "77",
									"disabled": true
								},
								{
									"key": "gender",
									"value": "male",
									"disabled": true
								},
								{
									"key": "homeworld",
									"value": "Tatooine",
									"disabled": true
								},
								{
									"key": "species",
									"value": "Human",
									"disabled": true
								},
								{
									"key": "hairColor",
									"value": "Blond",
									"disabled": true
								},
								{
									"key": "eyeColor",
									"value": "Blue",
									"disabled": true
								},
								{
									"key": "skinColor",
									"value": "Light",
									"disabled": true
								},
								{
									"key": "born",
									"value": "19BBY",
									"disabled": true
								},
								{
									"key": "died",
									"value": "131",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Specific Character",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{app_url}}/characters/1",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"characters",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Teams",
			"item": [
				{
					"name": "Get Teams",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{app_url}}/team/",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"team",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove Team",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{app_url}}/team/5/",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"team",
								"5",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Team",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "{{app_url}}/team/",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"team",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Member to Team",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"character_id\": \"1\"\n}"
						},
						"url": {
							"raw": "{{app_url}}/team/5/add_member/",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"team",
								"5",
								"add_member",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove Member from Team",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"character_id\": \"1\"\n}"
						},
						"url": {
							"raw": "{{app_url}}/team/5/remove_member/",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"team",
								"5",
								"remove_member",
								""
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"// Check if the response status is 401 (Unauthorized)\r",
					"if (pm.response.code === 401) {\r",
					"    // Send a request to refresh the token\r",
					"    pm.sendRequest({\r",
					"        url: pm.collectionVariables.get(\"app_url\") + \"/token/refresh/\",\r",
					"        method: \"POST\",\r",
					"        header: {\r",
					"            \"Content-Type\": \"application/json\"\r",
					"        },\r",
					"        body: {\r",
					"            mode: \"raw\",\r",
					"            raw: JSON.stringify({\r",
					"                refresh: pm.collectionVariables.get(\"refresh_token\")\r",
					"            })\r",
					"        }\r",
					"    }, function (err, res) {\r",
					"        if (res.code === 200) {\r",
					"            // If the token is refreshed successfully, update the environment variables\r",
					"            var jsonData = res.json();\r",
					"            pm.environment.set(\"token\", jsonData.access);\r",
					"            \r",
					"            // Retry the original request with the new token\r",
					"            pm.sendRequest({\r",
					"                url: pm.request.url.toString(),\r",
					"                method: pm.request.method,\r",
					"                header: pm.request.headers,\r",
					"                body: pm.request.body\r",
					"            }, function (err, res) {\r",
					"                // Set the response data to the initial request's response\r",
					"                pm.response.to.have.status(res.code);\r",
					"                pm.variables.set(\"responseBody\", res.json());\r",
					"            });\r",
					"        } else {\r",
					"            // If the token refresh fails, log an error\r",
					"            console.log(\"Token refresh failed: \" + res.code);\r",
					"        }\r",
					"    });\r",
					"} else {\r",
					"    // If the response is not 401, proceed as normal\r",
					"    pm.variables.set(\"responseBody\", pm.response.json());\r",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "token",
			"value": "none",
			"type": "string"
		},
		{
			"key": "refresh_token",
			"value": "none",
			"type": "string"
		},
		{
			"key": "app_url",
			"value": "http://localhost:8088/api",
			"type": "string"
		},
		{
			"key": "django_username",
			"value": "root",
			"type": "string"
		},
		{
			"key": "django_password",
			"value": "MY_OWN_PASS",
			"type": "string"
		}
	]
}